@model E_Commerce.Models.Home.HomeIndexViewModel

@{
    ViewBag.Title = "Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />

<div class="container">
    <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 ">
        @foreach (var item in Model.ListOfProducts)
        {
            <div class="col mb-4">
                <div class="product-card card h-100 position-relative">
                    <a href="@Url.Action("Product", "Home", new { productId = item.ProductId }, null)">
                        <img src="~/ProductImages/@item.ProductImage" class="card-img-top" style="cursor:pointer; height:160px;">
                    </a>
                    <div class="card-body">
                        <hr />
                        <h5 class="card-text" style=" text-align: center; color:rgb(133, 114, 75)">@item.ProductName</h5>
                        <p class="card-text" style=" text-align: center; font-weight:500;">₹@item.Price</p>
                        @if (item.Quantity > 0)
                        {
                            using (Html.BeginForm("AddToCart", "Home", new { productId = item.ProductId }, FormMethod.Post))
                            {
                                <button type="submit" class="pull-right"><i class="fa fa-shopping-cart"></i></button>
                            }
                            <p class="card-text">Available</p>
                        }
                        else
                        {
                            <p class="card-text">Not Available</p>
                        }

                        @if (item.IsFeatured == true)
                        {
                            <span class="position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle">
                                <span class="visually-hidden">New alerts</span>
                            </span>}
                    </div>
                </div>
            </div>
        }
        <br />
        @*@Html.PagedListPager(Model.ListOfProducts, page => Url.Action("Index", new { page, search = Request.QueryString["search"] }))*@
    </div>
</div>

